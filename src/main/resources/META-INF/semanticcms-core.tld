<?xml version="1.0" encoding="UTF-8"?>
<!--
semanticcms-core-taglib - Java API for modeling web page content and relationships in a JSP environment.
Copyright (C) 2013, 2014, 2015, 2016  AO Industries, Inc.
	support@aoindustries.com
	7262 Bull Pen Cir
	Mobile, AL 36695

This file is part of semanticcms-core-taglib.

semanticcms-core-taglib is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

semanticcms-core-taglib is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with semanticcms-core-taglib.  If not, see <http://www.gnu.org/licenses/>.
-->
<taglib xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
	version="2.1">
	<description>Java API for modeling web page content and relationships in a JSP environment.</description>
	<display-name>semanticcms-core-taglib</display-name>
	<tlib-version>1.0</tlib-version>
	<short-name>core</short-name>
	<uri>https://semanticcms.com/core/taglib/</uri>
	<tag>
		<description><![CDATA[
			<p>
				The body of this tag represents one page of content.
				The page title is automatically added as a &lt;h1&gt; before any content.
				There should be only one page tag per JSP file because the path to
				the page is determined by the servlet requestPath (or most recent ao:include).
			</p>
			<p>
				When this page is directly accessed, the HTML page is rendered with the
				page content coming from the body of this tag.  The view is resolved and
				the page is forwarded to the theme to generate the full HTML page.
			</p>
		]]></description>
		<name>page</name>
		<tag-class>com.semanticcms.core.taglib.PageTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description><![CDATA[
				<p>
					The <a href="https://schema.org/dateCreated">dateCreated</a>, in ISO 8601 format.  At least YYYY-MM-DD is required,
					and when time not specified will default to midnight in the current system time zone.
					A long value of <code>-1</code> or <code>0</code> is converted to <code>null</code>.
					Any value accepted by Joda Time DateTime is accepted.
				</p>
				<p>
					When created and published are the same date, prefer
					published because it seems to have more use overall than created.
				</p>
			]]></description>
			<name>dateCreated</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					The <a href="https://schema.org/datePublished">datePublished</a>, in ISO 8601 format.  At least YYYY-MM-DD is required,
					and when time not specified will default to midnight in the current system time zone.
					A long value of <code>-1</code> or <code>0</code> is converted to <code>null</code>.
					Any value accepted by Joda Time DateTime is accepted.
				</p>
				<p>
					When created and published are the same date, prefer
					published because it seems to have more use overall than created.
				</p>
			]]></description>
			<name>datePublished</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The <a href="https://schema.org/dateModified">dateModified</a>, in ISO 8601 format.  At least YYYY-MM-DD is required,
				and when time not specified will default to midnight in the current system time zone.
				A long value of <code>-1</code> or <code>0</code> is converted to <code>null</code>.
				Any value accepted by Joda Time DateTime is accepted.
			]]></description>
			<name>dateModified</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					The dateReviewed, in ISO 8601 format.  At least YYYY-MM-DD is required,
					and when time not specified will default to midnight in the current system time zone.
					A long value of <code>-1</code> or <code>0</code> is converted to <code>null</code>.
					Any value accepted by Joda Time DateTime is accepted.
				</p>
				<p>
					This has no equivalent in <a href="https://schema.org/">https://schema.org/</a>, however
					we feel it is important to actively review content to ensure its accuracy, even when it
					has not been modified.
				</p>
			]]></description>
			<name>dateReviewed</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The title of the page.
			]]></description>
			<name>title</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The optional short title of the page.
				A short title is used when the context of a page is well established, such as when
				showing a path to the current location in the site.  The short title defaults to <code>title</code>.
			]]></description>
			<name>shortTitle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The optional description of the page.
			]]></description>
			<name>description</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The optional keywords of the page.
			]]></description>
			<name>keywords</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					Controls whether robots will be allowed to access this page.  When not allowed
					a page will have robots="noindex,nofollow" added to meta and be excluded from
					sitemaps.
				</p>
				<p>
					Possible values are:
				</p>
				<ul>
					<li><code>auto</code> - Inherit from parent(s) within book or book settings if have no parents within the book.</li>
					<li><code>true</code> - Robots allowed</li>
					<li><code>false</code> - Robots not allowed</li>
				</li>
				Defaults to <code>auto</code>.
			]]></description>
			<name>allowRobots</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				Includes a table of contents at the top of the page.
				Possible values are:
				<ul>
					<li><code>auto</code> - Automatically selected</li>
					<li><code>true</code> - Always show</li>
					<li><code>false</code> - Always hide</li>
				</li>
				Defaults to <code>auto</code>.
			]]></description>
			<name>toc</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The number of levels to display in the table of contents.
				Must be between 1 and 5.
				Defaults to 3.
			]]></description>
			<name>tocLevels</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					When "true", it is acceptable for the parents to not list this page
					as a child.  In other words, this page may claim a parent that does
					not also claim this as a child.
				</p>
				<p>
					Parent-child relationships are never verified to parents from missing books.
				</p>
				<p>
					Defaults to "false" meaning strict parent-child relationship verification.
				</p>
				<p>
					Use of this can result in this page being orphaned, where this page
					and its child pages are not included in site traversals, such as for
					tree views or searches.
				</p>
			]]></description>
			<name>allowParentMismatch</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					When "true", it is acceptable for the children to not list this page
					as a parent.  In other words, this page may claim a child that does
					not also claim this as a parent.
				</p>
				<p>
					Child-parent relationships are never verified to children from missing books.
				</p>
				<p>
					Defaults to "false" meaning strict child-parent relationship verification.
				</p>
				<p>
					Use of this can result in incomplete determination of the
					children page's location(s) within the overall site.
				</p>
			]]></description>
			<name>allowChildMismatch</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			<p>
				Sets the copyright for the current page.
			</p>
			<p>
				At least one field must be set to a non-null value.
			</p>
			<p>
				Any field not set (or set to null) will be inherited from the parent(s) in the same book.
				Any field set to "" will have no value and not inherit from parents.
			</p>
			<p>
				If there are no parent pages in this same book, uses the fields from the book's copyright.
			</p>
			<p>
				When inheriting a field from multiple parent pages, the field must
				have exactly the same value in all parents.  Any mismatch in value
				will result in an exception.
			</p>
		]]></description>
		<name>copyright</name>
		<tag-class>com.semanticcms.core.taglib.CopyrightTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The rights holder, "" means none and null will inherit.
			]]></description>
			<name>rightsHolder</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The rights, "" means none and null will inherit.
			]]></description>
			<name>rights</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The date copyrighted, "" means none and null will inherit.
			]]></description>
			<name>dateCopyrighted</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			<p>
				Adds an author to the current page.
				It is permissible to have an author in a missing book.
			</p>
			<p>
				When no authors provided, will use the author(s) of any parent
				page that is within the same book.  If there are no parent pages
				in this same book, uses the book's authors.
			</p>
			<p>
				When inheriting authorship from multiple parent pages, the authors must
				be in exact agreement.  This means exactly the same order and all
				values matching precisely.  Any mismatch in authors will result in
				an exception.
			</p>
		]]></description>
		<name>author</name>
		<tag-class>com.semanticcms.core.taglib.AuthorTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The name of the author, to be used in &lt;meta name="author" content="..." /&gt;.
				Required when neither href nor page are provided.
				Also required when page provided and the page is in a different book.
			]]></description>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The href of the author, to be used in &lt;link rel="author" href="..." /&gt;
				Required when neither name nor page are provided.
				May not be used when page provided.
			]]></description>
			<name>href</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The book containing the author page.
				Defaults to the book of the current JSP file.
				Not allowed when page not provided.
			]]></description>
			<name>book</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page-relative path to the author page, to be used in &lt;link rel="author" href="..." /&gt;
				Required when neither name nor href are provided.
				May not be used when href provided.
			]]></description>
			<name>page</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			<p>
				Adds the given page as a parent of the current page.
				This tag only represents the relationship, so body content is not allowed.
				It is permissible to have a parent in a missing book.
			</p>
			<p>
				To build the relationship between pages and parents, the page
				should include &lt;core:parent tags for each parent page within
				the body of the &lt;core:page&gt; tag.  Due to optimizations during
				page-only capturing, the parent pages must be added directly in
				the page body, not from within other nested tags.
			</p>
			<p>
				This may not be set on the "content.root" of any of the books, as the
				parent(s) of a book varies based on where the book is placed.  The
				parent(s) of a book are configured in the /WEB-INF/books.properties file.
				All books require at least one parent except the "rootBook" which does not allow
				any parent.  These rules ensure a single root Directed Acyclic Graph (DAG).
			</p>
			<p>
				If no parents are added, an automatic parent is computed as follows:
			</p>
			<ol>
				<li>If this page is the "content.root" of a book, include all parents configured when book imported.</li>
				<li>If this page URL ends in "/", "/index.jspx" or "/index.jsp", look for JSP page at "../index.jspx" or "../index.jsp" then asssume "../", error if outside book.</li>
				<li>Look for page at "./index.jspx" or "./index.jsp" then assume "./".</li>
			</ol>
			<p>
				Unless "allowParentMismatch" is enabled on the page, the parent
				must also consider this page as a child.
			</p>
		]]></description>
		<name>parent</name>
		<tag-class>com.semanticcms.core.taglib.ParentTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The book containing the parent page.
				Defaults to the book of the current JSP file.
			]]></description>
			<name>book</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page-relative path to the parent page.
			]]></description>
			<name>page</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The optional short title of the page when within the context of this parent.
				When not provided, the shortTitle of the page itself is used.
			]]></description>
			<name>shortTitle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			<p>
				Adds the given page as a subpage of the current page.
				This tag only represents the relationship, so body content is not allowed.
				It is permissible to have a child in a missing book.
			</p>
			<p>
				To build the relationship between pages and subpages, the page
				should include &lt;core:child tags for each child page within
				the body of the &lt;core:page&gt; tag.  Due to optimizations during
				page-only capturing, the child pages must be added directly in
				the page body, not from within other nested tags.
			</p>
			<p>
				Unless "allowChildMismatch" is enabled on the page, the child
				must also consider this page as a parent.
			</p>
		]]></description>
		<name>child</name>
		<tag-class>com.semanticcms.core.taglib.ChildTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The book containing the child page.
				Defaults to the book of the current JSP file.
			]]></description>
			<name>book</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page-relative path to the child page.
			]]></description>
			<name>page</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			<p>
				Writes a link to a page and optionally an element.
				If element not provided, then page is required.
				If page is not provided, links to element within this page.
			</p>
			<p>
				Any attribute that has no namespace and begins with "param." is added to the href as a URL parameter.
				The parameter name is the part of the attribute name following "param.".
			</p>
			<p>
				When a parameter value is null it is not added.
				If the value is an Iterable, Iterator, Enumeration, or array, then each non-null element is coerced to
				string as a separate parameter in iteration order.  Otherwise, the value itself is
				coerced to string for the parameter value.
			</p>
			<p>
				Nested &lt;core:param&gt; or &lt;core:params&gt; tags will add parameters after any provided as attributes.
			</p>
			<p>
				If there is no body, will write the page title or element label.
			</p>
		]]></description>
		<name>link</name>
		<tag-class>com.semanticcms.core.taglib.LinkTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description><![CDATA[
				<p>
					The CSS class for the link.
					Defaults to a target-specific value, if any defined for the target element.
				</p>
				<p>
					To avoid the default, pass an empty class: &lt;core:link class="" ... /&gt;
				</p>
			]]></description>
			<name>class</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.Object</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				The book containing the page.
				Defaults to the book of the current JSP file.
			]]></description>
			<name>book</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page-relative path to the page.
				If not provided, must be nested in a &lt;core:page&gt; tag and assumes the current page.
			]]></description>
			<name>page</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page-unique id of the element to link to.
			]]></description>
			<name>element</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				When false, the default, may not link to generated ids.
				This is to avoid broken links as it is preferred to set explicit ids on target elements.
				Set to true to allow linking to generated element ids.
			]]></description>
			<name>allowGeneratedElement</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The view mode to use in the link target.  Although view is site defined, some common
				values might include:
				<ul>
					<li>null, "", or "content" (the default and always supported) - Links to the page content</li>
					<li>what-links-here</li>
					<li>tree</li>
					<li>all</li>
					<li>files</li>
				</ul>
			]]></description>
			<name>view</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					When false, the default, will generate a &lt;a&gt; tag around the entire body.
					Otherwise, will generate a &lt;span&gt; instead, with a small link added to
					the end of the body.
				</p>
				<p>
					Use of a small link can be helpful for usability, such as when the body is
					a piece of information intended for quick copy/paste by the user.
				</p>
			]]></description>
			<name>small</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<dynamic-attributes>true</dynamic-attributes>
	</tag>
	<tag>
		<description>Adds a parameter to its ParamsAttribute parent tag.</description>
		<name>param</name>
		<tag-class>com.aoindustries.taglib.ParamTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description><![CDATA[
				The name of parameter tag.
			]]></description>
		  <name>name</name>
		  <required>true</required>
		  <rtexprvalue>true</rtexprvalue>
		  <type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The value of the parameter.
				If not provided, the output of the body is used with whitespace trimmed.
			]]></description>
		  <name>value</name>
		  <required>false</required>
		  <rtexprvalue>true</rtexprvalue>
		  <type>java.lang.Object</type>
		  <!-- TODO: Deferred once supported by ao-taglib -->
		</attribute>
		<example />
	</tag>
	<tag>
		<description><![CDATA[
			Adds multiple parameters to its ParamsAttribute parent tag.
		]]></description>
		<name>params</name>
		<tag-class>com.aoindustries.taglib.ParamsTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description><![CDATA[
				<p>
					The name of parameter to add.
				</p>
				<p>
					When provided, the values may not contain a Map or HttpParameters.
					When provided, the exclude attribute may not be provided.
				</p>
			]]></description>
		  <name>name</name>
		  <required>false</required>
		  <rtexprvalue>true</rtexprvalue>
		  <type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					Optionally excludes all elements of a Map or HttpParameters that
					match any of the comma-separated patterns.
					May not be used in conjunction with the name attribute.
				</p>
				<p>
					Each pattern in the comma-separated list may in the following format:
					<ul>
					   <li>exact_name  matches the name exactly</li>
					   <li>*           matches all (clears all parameters)</li>
					   <li>*suffix     matches the name with "endsWith"</li>
					   <li>prefix*     matches the name with "beginsWith"</li>
					</ul>
				</p>
				<p>
					Defaults to none excluded.
				</p>
			]]></description>
			<name>exclude</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				<p>
					The values of the parameters.
				</p>
				<p>
					When name is provided, supports <code>java.lang.Iterable</code>,
					<code>java.util.Iterator</code>, <code>java.util.Enumeration</code>, or array values.
				</p>
				<p>
					When name is not provided, requires <code>java.util.Map</code> or <code>com.aoindustries.net.HttpParameters</code>, where
					the parameter name is the map key coerced to string and the value
					(or set of values) is the map value.  Each of the entry values may
					be <code>java.lang.Iterable</code>, <code>java.util.Iterator</code>,
					<code>java.util.Enumeration</code>, array, or single value.
				</p>
				<p>
					When obtaining values from a <code>java.util.Map</code> or <code>com.aoindustries.net.HttpParameters</code>,
					parameters may be excluded with the "exclude" attribute.
				</p>
				<p>
					Parameters are never added with <code>null</code> values.
				</p>
			]]></description>
		  <name>values</name>
		  <required>true</required>
		  <rtexprvalue>true</rtexprvalue>
		  <type>java.lang.Object</type>
		  <!-- TODO: Deferred once supported by ao-taglib -->
		</attribute>
		<example />
	</tag>
	<tag>
		<description><![CDATA[
			Writes the tree data for use by TreeView as &lt;ul&gt; and &lt;li&gt; tags.
		]]></description>
		<name>navigationTree</name>
		<tag-class>com.semanticcms.core.taglib.NavigationTreeTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The root page of the tree.
			]]></description>
			<name>root</name>
			<required>true</required>
			<deferred-value>
				<type>com.semanticcms.core.model.Page</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				May optionally skip the root page, displaying it's children only.
				Defaults to "false".
			]]></description>
			<name>skipRoot</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				May optionally add yuiConfig data.
				Defaults to "false".
			]]></description>
			<name>yuiConfig</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				May optionally include tree nodes for elements within pages.
				Defaults to "false".
			]]></description>
			<name>includeElements</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				An optional target for links.
			]]></description>
			<name>target</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The book for thisPage.
				Defaults to the book of the current JSP file.
			]]></description>
			<name>thisBook</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				May optionally mark a specific page (by context-relative path).
				All page matches are marked with class "semanticcms-core-tree-this-page".
				Only the first match is marked with id "semanticcms-core-tree-this-page".
			]]></description>
			<name>thisPage</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				The book for linksToPage.
				Defaults to the book of the current JSP file.
			]]></description>
			<name>linksToBook</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				May optionally filter for pages that link to the given page (by context-relative path).
				The parent pages of any page that has a link will also be included.
				The pages that actually have a link will be marked with class "semanticcms-core-links-to-page"
			]]></description>
			<name>linksToPage</name>
			<required>false</required>
			<deferred-value>
				<type>java.lang.String</type>
			</deferred-value>
		</attribute>
		<attribute>
			<description><![CDATA[
				May optionally limit the depth of the navigation tree.
				A skipped root does not count as one for the depth.
				0, the default, means unlimited depth.
			]]></description>
			<name>maxDepth</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>int</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			Writes the body of the given node, recursively replacing any nested
			element markers.  The body is not written during PAGE and META captures.
		]]></description>
		<name>writeNodeBody</name>
		<tag-class>com.semanticcms.core.taglib.WriteNodeBodyTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The node to write.
			]]></description>
			<name>node</name>
			<required>true</required>
			<deferred-value>
				<type>com.semanticcms.core.model.Node</type>
			</deferred-value>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			Calls the view for the given page.
		]]></description>
		<name>doView</name>
		<tag-class>com.semanticcms.core.taglib.DoViewTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The view to call.
			]]></description>
			<name>view</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>com.semanticcms.core.servlet.View</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page to provide to the view.
			]]></description>
			<name>page</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>com.semanticcms.core.model.Page</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
			Calls all registered components for the given view, page, position,
			and optional order.
		]]></description>
		<name>doComponents</name>
		<tag-class>com.semanticcms.core.taglib.DoComponentsTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description><![CDATA[
				The view that is being rendered.
			]]></description>
			<name>view</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>com.semanticcms.core.servlet.View</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The page that is being rendered.
			]]></description>
			<name>page</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>com.semanticcms.core.model.Page</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				The current position being handled.
			]]></description>
			<name>position</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<type>com.semanticcms.core.servlet.ComponentPosition</type>
		</attribute>
		<attribute>
			<description><![CDATA[
				When <code>false</code>, the default, will call components in forward order.
				When <code>true</code>, will call the components in the reverse order.
			]]></description>
			<name>reverse</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
	</tag>
	<function>
		<description><![CDATA[
			<p>
				Captures a &lt;core:page&gt; in a provided book.
				The capture is always done with a request method of "GET", even when the enclosing request is a different method.
			</p>
			<p>
				Parameter "book": The name of the book containing the page.
			</p>
			<p>
				Parameter "page": The book-relative path to the JSP file to include for the page to capture,
				must begin with a slash (/).
			</p>
			<p>
				Parameter "level": Controls the level of detail to capture.  May be one of:
				<ol>
					<li>"page" - Fastest: captures page meta data only (including parent and child pages).</li>
					<li>"meta" - Captures page and content meta data, but no HTML content.</li>
					<li>"body" - Captures page and content meta data as well as all HTML body content.</li>
				</ol>
			</p>
			<p>
				Level may need to be set to "page" when two pages capture each other (either directly
				or indirectly).  This may occur when these two pages capture each other for meta data,
				such as automatic page title added to links.
			</p>
		]]></description>
		<name>capturePageInBook</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>com.semanticcms.core.model.Page capturePageInBook(java.lang.String,java.lang.String,java.lang.String)</function-signature>
		<example>${core:capturePageInBook(book, page, level)}</example>
	</function>
	<function>
		<description><![CDATA[
			<p>
				Captures a &lt;core:page&gt;.
			</p>
			<p>
				Parameter "page": The page-relative path to the JSP file to include for the page to capture.
			</p>
			<p>
				Parameter "level": Controls the level of detail to capture.  May be one of:
				<ol>
					<li>"page" - Fastest: captures page meta data only (including parent and child pages).</li>
					<li>"meta" - Captures page and content meta data, but no HTML content.</li>
					<li>"body" - Captures page and content meta data as well as all HTML body content.</li>
				</ol>
			</p>
			<p>
				Level may need to be set to "page" when two pages capture each other (either directly
				or indirectly).  This may occur when these two pages capture each other for meta data,
				such as automatic page title added to links.
			</p>
		]]></description>
		<name>capturePage</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>com.semanticcms.core.model.Page capturePage(java.lang.String,java.lang.String)</function-signature>
		<example>${core:capturePage(page, level)}</example>
	</function>
	<function>
		<description><![CDATA[
			Captures the content root &lt;core:page&gt; with unlimited depth and the given capture level.
		]]></description>
		<name>captureContentRoot</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>com.semanticcms.core.model.Page captureContentRoot(java.lang.String)</function-signature>
		<example>${core:captureContentRoot(level)}</example>
	</function>
	<function>
		<description><![CDATA[
			<p>
				Gets the current capture level.  Will be one of:
				<ol>
					<li>null - No capture in progress</li>
					<li>"page" - Fastest: capturing page meta data only.</li>
					<li>"meta" - Capturing page and content meta data, but no HTML content.</li>
					<li>"body" - Capturing page and content meta data as well as all HTML body content.</li>
				</ol>
			</p>
		]]></description>
		<name>getCaptureLevel</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getCaptureLevel()</function-signature>
		<example>${core:getCaptureLevel()}</example>
	</function>
	<function>
		<description><![CDATA[
			Get the page index for the given page reference.
		]]></description>
		<name>getPageIndex</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>com.aoindustries.docs.taglib.PageIndex getPageIndex(com.semanticcms.core.model.PageRef)</function-signature>
		<example>${core:getPageIndex(pageRef)}</example>
	</function>
	<function>
		<description><![CDATA[
			<p>
				Flattens a page directed acyclic graph (DAG).  The page DAG starts as a single page with any
				number of children.  Each of the child pages may, in turn, have children.
				The result of this transformation is a list of pages in depth-first traversal
				order.
			</p>
			<p>
				A page may actually be linked into multiple places in the DAG, so strictly
				speaking this is a single root Directed Acyclic Graph (DAG).
			</p>
			<p>
				Only the first occurance of each page will be in the resulting list.
			</p>
			<p>
				Parameter "level": Controls the level of detail to capture.  May be one of:
				<ol>
					<li>"page" - Fastest: captures page meta data only (including parent and child pages).</li>
					<li>"meta" - Captures page and content meta data, but no HTML content.</li>
					<li>"body" - Captures page and content meta data as well as all HTML body content.</li>
				</ol>
			</p>
		]]></description>
		<name>convertPageDagToList</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.List convertPageDagToList(com.semanticcms.core.model.Page,java.lang.String)</function-signature>
		<example>${core:convertPageDagToList(rootPage, level)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the local file for a book and book-relative path.
		]]></description>
		<name>getFileInBook</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.io.File getFileInBook(java.lang.String,java.lang.String,boolean)</function-signature>
		<example>${core:getFileInBook(book, path, requireFile)</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the local file for a page-relative path.
		]]></description>
		<name>getFile</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.io.File getFile(java.lang.String,boolean)</function-signature>
		<example>${core:getFile(path, requireFile)</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the local file for a book and book-relative path while making sure it is
			set executable.
		]]></description>
		<name>getExeFileInBook</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.io.File getExeFileInBook(java.lang.String,java.lang.String)</function-signature>
		<example>${core:getExeFileInBook(book, path)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the local file for a page-relative path while making sure it is
			set executable.
		]]></description>
		<name>getExeFile</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.io.File getExeFile(java.lang.String)</function-signature>
		<example>${core:getExeFile(path)}</example>
	</function>
	<function>
		<description><![CDATA[
			Encodes value for use in a URL parameter in the current response encoding.
		]]></description>
		<name>encodeUrlParam</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String encodeUrlParam(java.lang.String)</function-signature>
		<example>${core:encodeUrlParam(value)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets an id for use in the current page.  If the page is part of a page index,
			as in a combined view, will be "page#-id".  Otherwise, the id is unchanged.
		]]></description>
		<name>getRefId</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getRefId(java.lang.String)</function-signature>
		<example>${core:getRefId(id)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets an id for use in referencing the given page.  If the page is part of a page index,
			as in a combined view, will be "page#-id".  Otherwise, the id is unchanged.
		]]></description>
		<name>getRefIdInPage</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getRefIdInPage(com.semanticcms.core.model.Page,java.lang.String)</function-signature>
		<example>${core:getRefIdInPage(page, id)}</example>
	</function>
	<function>
		<description><![CDATA[
			Calls Math.ceil, returns null when argument is null.
		]]></description>
		<name>ceil</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.Double ceil(java.lang.Double)</function-signature>
		<example>${core:ceil(a)}</example>
	</function>
	<function>
		<description><![CDATA[
			Calls Math.floor, returns null when argument is null.
		]]></description>
		<name>floor</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.Double floor(java.lang.Double)</function-signature>
		<example>${core:floor(a)}</example>
	</function>
	<function>
		<description><![CDATA[
			Parses the provided request query string, maintaining the original parameter order.
			Only uses the first of each value per parameter name, multiple values not supported.
			Uses the request encoding or ISO-8859-1 if none set.
		]]></description>
		<name>parseQueryString</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.Map parseQueryString(java.lang.String)</function-signature>
		<example>${core:parseQueryString(pageContext.request.queryString)}</example>
	</function>
	<function>
		<description><![CDATA[
			Repeats a string the given number of times.
		]]></description>
		<name>repeat</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String repeat(java.lang.String,int)</function-signature>
		<example>${core:repeat(value, count)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the book for the provided page path.
		]]></description>
		<name>getBook</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>com.semanticcms.core.model.Book getBook(java.lang.String)</function-signature>
		<example>${core:getBook(pagePath)}</example>
	</function>
	<function>
		<description><![CDATA[
			Encodes arbitrary data into a UTF-8 encoded, then hex-encoded string.
		]]></description>
		<name>encodeHexData</name>
		<function-class>com.semanticcms.core.servlet.impl.NavigationTreeImpl</function-class>
		<function-signature>java.lang.String encodeHexData(java.lang.String)</function-signature>
		<example>${core:encodeHexData(data)}</example>
	</function>
	<function>
		<description><![CDATA[
			Checks if the current request is for an export.
		]]></description>
		<name>isExporting</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>boolean isExporting()</function-signature>
		<example>${core:isExporting()}</example>
	</function>
	<function>
		<description><![CDATA[
			Finds the copyright for the given page or null if none set.  Inheriting fields from the
			parent page(s) within the same book, or using fields from the book copyright if none
			set on the page or its parent(s).
		]]></description>
		<name>findCopyright</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>com.semanticcms.core.model.Copyright findCopyright(com.semanticcms.core.model.Page)</function-signature>
		<example>${core:findCopyright(page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Finds the author(s) for the given page.  Inheriting authors from the
			parent page(s) within the same book, or using the book authors if none
			set on the page or its parent(s).
		]]></description>
		<name>findAuthors</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.Set findAuthors(com.semanticcms.core.model.Page)</function-signature>
		<example>${core:findAuthors(page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Finds the allowRobots setting for the given page.  Inheriting setting from the
			parent page(s) within the same book, or using the book allowRobots if none
			set on the page or its parent(s).
		]]></description>
		<name>findAllowRobots</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>boolean findAllowRobots(com.semanticcms.core.model.Page)</function-signature>
		<example>${core:findAllowRobots(page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Checks if the given page has at least one accessible child page
			(ignores child pages in missing books).
		]]></description>
		<name>hasChild</name>
		<function-class>com.semanticcms.core.servlet.PageUtils</function-class>
		<function-signature>boolean hasChild(com.semanticcms.core.model.Page)</function-signature>
		<example>${core:hasChild(page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Checks if the given page, or optionally any of its child pages, has at least
			one of the element type given.
		]]></description>
		<name>hasElement</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>boolean hasElement(com.semanticcms.core.model.Page,java.lang.String,boolean)</function-signature>
		<example>${core:hasElement(page, elementType, recursive)}</example>
	</function>
	<function>
		<description><![CDATA[
			<p>
				Looks for the nearest nested elements of the given class.  These elements
				may be direct descendents or descendents further down the tree, but only
				the top-most descendents are returned.
			</p>
			<p>
				If the node is a page, its elements are checked, but the elements of its child pages are not.
			</p>
		]]></description>
		<name>findTopLevelElements</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.List findTopLevelElements(com.semanticcms.core.model.Node,java.lang.String)</function-signature>
		<example>${core:findTopLevelElements(node, elementType)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets all elements in the page (including all child elements) that are of the
			given type, in the order they were declared in the page.
		]]></description>
		<name>filterElements</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.List filterElements(com.semanticcms.core.model.Page,java.lang.String)</function-signature>
		<example>${core:filterElements(page, elementType)}</example>
	</function>
	<function>
		<description><![CDATA[
			Checks if a view is applicable the given request and page.
		]]></description>
		<name>isViewApplicable</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>boolean isViewApplicable(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:isViewApplicable(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the CSS class to use for the main navigation link to this view.
		]]></description>
		<name>getViewLinkCssClass</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getViewLinkCssClass(com.semanticcms.core.servlet.View)</function-signature>
		<example>${core:getViewLinkCssClass(view)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the optional additional parameter to a view link.
		]]></description>
		<name>getViewLinkParams</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.Map getViewLinkParams(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getViewLinkParams(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the copyright for the given view and page.
		]]></description>
		<name>getViewCopyright</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getViewCopyright(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getViewCopyright(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the authors for the given view and page.
		]]></description>
		<name>getViewAuthors</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.Set getViewAuthors(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getViewAuthors(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the title for the given view and page.
		]]></description>
		<name>getViewTitle</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getViewTitle(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getViewTitle(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets an optional set of additional links to include for this view
			in the order they should be added.
		]]></description>
		<name>getViewLinks</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.Collection getViewLinks(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getViewLinks(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the allowRobots for the given view and page.
		]]></description>
		<name>getViewAllowRobots</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>boolean getViewAllowRobots(com.semanticcms.core.servlet.View,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getViewAllowRobots(view, page)}</example>
	</function>
	<function>
		<description><![CDATA[
			Gets the CSS class that is to be used to link to the given element or <code>null</code>
			if none registered.
		]]></description>
		<name>getLinkCssClass</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.lang.String getLinkCssClass(com.semanticcms.core.model.Element)</function-signature>
		<example>${core:getLinkCssClass(element)}</example>
	</function>
	<function>
		<description><![CDATA[
			Merges global and per-view scripts for the provided view.
		]]></description>
		<name>mergeGlobalAndViewScripts</name>
		<function-class>com.semanticcms.core.taglib.Functions</function-class>
		<function-signature>java.util.Map mergeGlobalAndViewScripts(com.semanticcms.core.servlet.View)</function-signature>
		<example>${core:mergeGlobalAndViewScripts(view)}</example>
	</function>
	<function>
		<description><![CDATA[
			Determines the short title for a page and one of its parents.
		]]></description>
		<name>getShortTitle</name>
		<function-class>com.semanticcms.core.servlet.PageUtils</function-class>
		<function-signature>java.lang.String getShortTitle(com.semanticcms.core.model.PageRef,com.semanticcms.core.model.Page)</function-signature>
		<example>${core:getShortTitle(parentPageRef,page)}</example>
	</function>
</taglib>
